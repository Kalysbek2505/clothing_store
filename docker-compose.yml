services:
  db:
    image: postgres:15
    restart: unless-stopped
    env_file: ./.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [webnet]

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: ./.env
    depends_on:
      - db
    volumes:
      - static_volume:/app/static
      - ./backend/media:/app/media
    networks: [webnet]

  frontend:
    image: node:18-alpine
    working_dir: /app
    command: sh -c "npm ci && npm run build && rm -rf /dist/* && cp -r dist/* /dist/ && sleep infinity"
    environment:
      VITE_API_URL: ${VITE_API_URL}
    volumes:
      - ./frontend:/app
      - frontend_dist:/dist
    networks: [webnet]

  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/static:ro
      - ./backend/media:/app/media:ro
      - frontend_dist:/usr/share/nginx/html:ro
    networks: [webnet]

volumes:
  pgdata:
  static_volume:
  frontend_dist:

networks:
  webnet:
